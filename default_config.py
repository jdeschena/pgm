import copy
from omegaconf import OmegaConf


DEFAULT_CONFIG = {
  'data_folder': '[path to PREPROCESSED data]', 
  'eval_folder': '[path to PREPROCESSED data]', 
  'saved_folder': 'saved_networks/maskgit/', 
  'writer_log': 'logs/imagenet-feat-256-ds-8', 
  'wandb_project': 
  'maskgit', 
  'disable_wandb': False, 
  'run_name': 'debug', 
  'vqgan_folder': 'saved_networks/vq_ds8_c2i.pt', 
  'data': 'imagenet_feat', 
  'device': 'cuda:0', 
  'seed': -1, 
  'mode': 'cls-to-img', 
  'debug': False, 
  'resume': True, 
  'test_only': False, 
  'use_ema': False, 
  'resume_checkpoint': None, 
  'scores_save_path': None, 
  'vit_size': 'large', 
  'img_size': 256, 
  'f_factor': 8, 
  'codebook_size': 16384, 
  'mask_value': '${codebook_size}', 
  'bos_value': None, 
  'register': 0, 
  'proj': 1, 
  'dtype': 'bfloat16', 
  'num_workers': 8, 
  'global_bsize': 16, 
  'gradacc': 1, 
  'nb_class': 1000, 
  'max_iter': 1000000, 
  'log_iter': 2500, 
  'warm_up': 2500, 
  'lr': 0.0001, 
  'grad_clip': 1, 
  'sched_mode': 'arccos', 
  'dropout': 0.1, 
  'epoch': 10000, 
  'drop_label': 0.1, 
  'grad_cum': 1, 
  'sampler': 'confidence', 
  'sm_temp': 1.0, 
  'cfg_w': 0, 
  'step': 32, 
  'randomize': False, 
  'sched_pow': 2, 
  'top_k': -1, 
  'temp_warmup': 1, 
  'sm_temp_min': 1.0, 
  'r_temp': 5, 
  'compile': True, 
  'model': {
    'name': 'maskgit', 
    'type': 'encoder-decoder', 
    'length': 1025, 
    'cond_dim': 128, 
    'hidden_size': 1024, 
    'n_heads': 16, 
    'mlp_ratio': 4, 
    'scale_by_sigma': True, 
    'dropout': 0.1, 
    'tie_word_embeddings': False, 
    'n_class': 1000, 
    'encoder': {'n_blocks': 12}, 
    'swap': {
      'pre_query_mode': 'learn+freqs', 
      'query_process_mode': 'linear', 
      'normalize_mode': 'layernorm'}, 
    'decoder': {
      'n_blocks': 12, 
      'mode': 'cross-only', 
      'self_attn_first': False}}, 
    'sampling': {
      'inject_bos': True, 
      'use_float64': True}, 
    'algo': {
      'name': 'partition-mdlm', 
      'backbone': 'encoder-decoder', 
      'parameterization': 'subs', 
      'time_conditioning': False, 
      'T': 0, 
      'subs_masking': False, 
      'causal_attention': False, 
      'ignore_bos': False, 
      'loss_type': 'elbo', 
      'sampling_mode': 'naive', 
      'post_process_mode': 'efficient+fp64', 
      'prevent_full_partition': False}
    }


def get_default_config():
  return OmegaConf.create(copy.deepcopy(DEFAULT_CONFIG))